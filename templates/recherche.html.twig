{# empty Twig template #}

    <h2>
        {{ ong.ongcom }}
    </h2>
  

    <br>
 <table class="table display compact table-hover" id="recherche" style="width:80%">
    <thead>
      <tr>
          {% set hcol = [] %} 
          {% set hcol1 = [] %}  

          {%for ch in champs %}
{% if ch.chprec != 0 %}
        <th>{{ch.chpcha}}</th>
             {% set hcol = hcol|merge([ch.chpcha|lower]) %}  
             {% set hcol1 = hcol1|merge([{data :ch.chpcha|lower}]) %}  
{% endif %}
{% endfor %}
 {% set hcol1 = hcol1|merge([{ className: "","ordering": false, "searching": false}]) %}  
<th>Action</th>
      </tr>
    </thead>
    <tbody id="fline">

     
    </tbody>
           <tfoot>
            <tr>
             {%for ch in champs %}
{% if ch.chprec != 0 %}
        <th id="{{ch.chpcha}}" >{{ch.chpcha}}</th>
           
{% endif %}
    
{% endfor %}
<th>Action</th>
            </tr>
        </tfoot>
  </table>



{% if ong.ongcre >3 %}
<boutton class="btn btn-primary" data-toggle="modal" data-target="#myModal" onclick="change_click()">Création<boutton>
{% endif %}

      
     

    <script>
// initialisation varibles javascript
var hcol1 =  {{hcol1|json_encode()|raw}};
   
$(document).ready(function(){
   var hcol =  {{hcol|json_encode()|raw}};
   var hcol1 =  {{hcol1|json_encode()|raw}};
   $( "tfoot th:last-child" ).hide();
   
table(hcol1);
var divimg = $("div[id^='divrow']")
    });

  //  initiliasation data table  
 function table(hcol1){
     var countrow = 0 ;
     $.get("{{app.request.schemeAndHttpHost ~ app.request.baseUrl~path('api_entrypoint')~"/"~apipath}}", function(data, status){
  
 var count = 0 ;
var table = $('#recherche').DataTable({

    data: data["hydra:member"],
    columnDefs: [ {
    "targets": -1,
    "data":null,
    "searchable": false, 
    "orderable": false,
    "render": function ( data, type, row, meta ) {

      return '<div  class="bg-secondary" data-text="'+row["magazine"]+'" data-image="'+row["image"]+'" id="divrow'+row["@id"].slice(15,row["@id"].length)+'"><a class="btn btn-success " id="'+row["@id"]+'" data-ong="{{ongarr.id}}" data-image="'+row["image"]+'"  onclick="detail_voir(this.id,this.dataset.image)">V</a> </div>';
    }
  } ],
  "language": {
            "url": "{{ asset('/french.json') }}"
        },
    columns: hcol1,
    deferRender: true,
    "createdRow": function ( row, data, index ) {
       // console.log(hcol1[0].data) 
        var rowkeys = Object.keys(row.children);
        rowkeys.forEach(element => {
if(hcol1[element].data=="date" || hcol1[element].data=="datefin" ){
row.children[element].childNodes[0].data = row.children[element].childNodes[0].data.slice(0,10);
}
        });
      
       row.children[0].classList.add("bg-info")
        },
    initComplete: function () {


 
 var divimg = $("div[id^='divrow']")

 //Object.keys(divimg).forEach(function (item) {
  //   if (item != 'length' ){
  //   if (item != 'prevObject' ){

//if (divimg[item].dataset.image != 'undefined') {
//    $.get(divimg[item].dataset.image, function(data, status){
//     $("#"+divimg[item].id).append('<img id="tabimg" style="width:80px;height:100px;" src="{{ asset('img/') }}'+data.filename+'" />');
//  });   
//}
 //     }
  //   }
     
//});
     
            this.api().columns().every( function () {
                var column = this;
                var select = $('<select><option value=""></option></select>')
                    .appendTo( $(column.footer()).empty() )
                    .on( 'change', function () {
                        var val = $.fn.dataTable.util.escapeRegex(
                            $(this).val()
                        );
 
                        column
                            .search( val ? '^'+val+'$' : '', true, false )
                            .draw();
                    } );
 
                column.data().unique().sort().each( function ( d, j ) {
                    select.append( '<option value="'+d+'">'+d+'</option>' )
                } );
 
               
            } );
        },
} );


});

    }

// initialistation modal à afficher ou à modifier recuperation de données et remplissage
function detail_modif(id){
    $("#btnsend").show();   
     $('#btnsend').data('path',id);
      var $inputs = $('#mbinput :input');
     
 $inputs.each(function() {
    $(this).val("");
 });
  $.get(id, function(data, status){
 // console.log(data);
    
     $inputs.each(function() {
        var chpnom =$(this).attr('name').toLowerCase();
        $('#'+chpnom).val(data[chpnom]);
      
        if($(this).attr('type')=='date'){
         $('#'+chpnom).val(data[chpnom].slice(0, 10));    
        }
    })
 
  });
    
    }

    // utilisation de methodes post,put,delette pour une modal
    
    function modal_put(method){
       var mdlfrm = {};  
       var md2=[];
       var $inputs = $('#mbinput :input');
        var path="";
             
        
        if(method=='PUT'){
           path = $('#btnsend').data("path");
           $inputs.each(function() {
           mdlfrm[$(this).attr('name').toLowerCase()]=$(this).val();
       
           if($(this).attr("type")=='number'){
                mdlfrm[$(this).attr('name').toLowerCase()]=parseInt($(this).val());  
           }
        }); 
        }
        
         if(method=='DELETE'){
           path = $('a[name=delbtn]').attr('id');
        }
       
       if (method=='POST'){
           path='{{app.request.schemeAndHttpHost ~ app.request.baseUrl~path('api_entrypoint')~"/"~apipath}}';
     
           $inputs.each(function() {
           mdlfrm[$(this).attr('name').toLowerCase()]=$(this).val();
     
           if($(this).attr("type")=='number'){
                mdlfrm[$(this).attr('name').toLowerCase()]=parseInt($(this).val());  
        }
        })
    }
     var jsonform = JSON.stringify(mdlfrm);
    $.ajax(path, {
    method: method,
    contentType: 'application/json',
    processData: false,
    data: jsonform
})
.then(
    function success(data) {
   
        alert('modifications prise en compte');
       
         $('#myModal').modal('hide');
         location.reload();
       
    }
);
    }
    
    function detail_voir(id,image){
       $("#imgmodal").remove();
       detail_modif(id);
       (id);
       $("#btnsend").hide();
        var ongcre = {{ong.ongcre}};
        var btnscre1 = "{{ong.ongsqlcre}}";
     if (image === 'undefined') {
          $('#myModal').modal('show');  
     } else {
        $.get(image, function(data, status){
            $("#mbinput").append('<img id="imgmodal" src="{{ asset('img/') }}'+data.filename+'" /><br>');

            if(ongcre==0)    {
                $('.simpleCart_input').replaceWith(function(){
                  
                return '<span class='+this.className+"text-dark"+'>'+this.value+'</span>'
                })
            }
            
            if (btnscre1) $("#mbinput").append('<button  type="button" class="btn btn-info" id="'+id+'" onclick="{{ong.ongsqlcre}}" > Abonner</button>');
            $('#myModal').modal('show');
        }); 
     }

    }

    function change_click(){
     $('#btnsend').attr("onclick","modal_put('POST')");
     var $inputs = $('#mbinput :input');
          $inputs.each(function() {
    $(this).val("");
     });
    }
    
    function del(){
    modal_put("DELETE");
    }
     function sabonner(id){
         
       //  $.post( "/api/abonnements", { date:Date.now(),client: {{app.user.id}},  "magazine": id), "encours": true } );
    alert("sbonner"+id.slice(15,id.length))
    }

</script>
 

